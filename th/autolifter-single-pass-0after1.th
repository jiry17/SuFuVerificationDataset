  (datatype Bool () ((true Bool) (false Bool)))
  (datatype Unit () ((null Unit)))
  (datatype List () ((nil Unit List) (cons Bool List List)))
  (declare-fun tf1 (List List) List)
  (=> tf1r0 (tf1 ?tv4 (nil ?tv5)) ?tv4)
  (=> tf1r1 (tf1 ?tv4 (cons ?tv6 ?tv7)) (cons ?tv6 (tf0 ?tv7)))
  (declare-fun tf0 (List) List)
  (=> tf0r0 (tf0 ?tv2) (tf1 ?tv2 ?tv2))
  (declare-fun tf2 (List) Bool)
  (=> tf2r0 (tf2 ?tv9) (zafter1 (tf0 ?tv9)))
  (declare-fun single_pass (List) Bool)
  (=> single_passr0 (single_pass ?tv1) (tf2 ?tv1))
  (declare-fun and (Bool Bool) Bool)
  (=> andr0 (and false ?x) false)
  (=> andr1 (and ?x false) false)
  (=> andr2 (and true true) true)
  (declare-fun not (Bool) Bool)
  (=> notr0 (not true) false)
  (=> notr1 (not false) true)
  (declare-fun or (Bool Bool) Bool)
  (=> orr0 (or true ?x) true)
  (=> orr1 (or ?x true) true)
  (=> orr2 (or false false) false)
  (declare-fun ite (Bool pvar0) pvar0)
  (=> iter0 (ite true ?y) true)
  (=> iter1 (ite false ?y) ?y)
  (declare-fun tf4 (Bool List) Bool)
  (=> tf4r0 (tf4 ?tv14 (nil ?tv15)) false)
  (=> tf4r1 (tf4 ?tv14 (cons ?tv16 ?tv17)) (ite (and ?tv14 (not ?tv16)) (tf3 (or ?tv14 ?tv16) ?tv17)))
  (declare-fun tf3 (Bool List) Bool)
  (=> tf3r0 (tf3 ?tv11 ?tv12) (tf4 ?tv11 ?tv12))
  (declare-fun zafter1 (List) Bool)
  (=> zafter1r0 (zafter1 ?tv10) (tf3 false ?tv10))
  (declare-fun main (List) Bool)
  (=> mainr0 (main ?tv18) (single_pass ?tv18))
  (declare-fun snd_1 (Tuple1) Bool)
  (=> snd_1r0 (snd_1 (makeTuple1 ?x0 ?x1)) ?x1)
  (declare-fun fst_1 (Tuple1) Bool)
  (=> fst_1r0 (fst_1 (makeTuple1 ?x0 ?x1)) ?x0)
  (declare-fun tf6 (List) Tuple1)
  (=> tf6r0 (tf6 (nil ?tv23)) (makeTuple1 false true))
  (=> tf6r1 (tf6 (cons ?tv24 ?tv25)) (makeTuple1 (or (and ?tv24 (not (snd_1 (tf5 ?tv25)))) (fst_1 (tf5 ?tv25))) (and ?tv24 (snd_1 (tf5 ?tv25)))))
  (declare-fun tf5 (List) Tuple1)
  (=> tf5r0 (tf5 ?tv21) (tf6 ?tv21))
  (declare-fun tf7 (List) Bool)
  (=> tf7r0 (tf7 ?tv26) (fst_1 (tf5 ?tv26)))
  (declare-fun single_pass_ (List) Bool)
  (=> single_pass_r0 (single_pass_ ?tv20) (tf7 ?tv20))
  (declare-fun main_ (List) Bool)
  (=> main_r0 (main_ ?tv27) (single_pass_ ?tv27))
  (prove (forall ((inp0 List)) (= (main inp0) (main_ inp0))))
