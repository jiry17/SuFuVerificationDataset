(
  (data Bool (True False))
  (:: True Bool)
  (:: False Bool)
  (data Nat (Zero Succ))
  (:: Zero Nat)
  (:: Succ (-> (Nat) Nat))
  (data Tuple3 (pvar0 pvar1 pvar2) (MakeTuple3))
  (:: MakeTuple3 (-> (pvar0 pvar1 pvar2) (Tuple3 pvar0 pvar1 pvar2)))
  (data Tree (Leaf Node))
  (:: Leaf (-> (Nat) Tree))
  (:: Node (-> ((Tuple3 Nat Tree Tree)) Tree))
  (data Tuple2 (pvar0 pvar1) (MakeTuple2))
  (:: MakeTuple2 (-> (pvar0 pvar1) (Tuple2 pvar0 pvar1)))
  (:: and (-> (Bool Bool) Bool))
  (let and (False ?x) False)
  (let and (?x False) False)
  (let and (True True) True)
  (:: lq (-> (Nat Nat) Bool))
  (let lq (Zero (Succ ?x)) True)
  (let lq (?x Zero) False)
  (let lq ((Succ ?x) (Succ ?y)) (lq ?x ?y))
  (:: fst2 (-> ((Tuple2 pvar0 pvar1)) pvar1))
  (let fst2 ((MakeTuple2 ?x0 ?x1)) ?x0)
  (:: snd2 (-> ((Tuple2 pvar0 pvar1)) pvar2))
  (let snd2 ((MakeTuple2 ?x0 ?x1)) ?x1)
  (:: tf1 (-> (Tree) (Tuple2 Nat Bool)))
  (let tf1 ((Leaf ?tv3)) (MakeTuple2 ?tv3 True))
  (let tf1 ((Node (MakeTuple3 ?tv4 ?tv5 ?tv6))) (MakeTuple2 ?tv4 (and (and (and (lq (fst2 (tf0 ?tv5)) ?tv4) (lq ?tv4 (fst2 (tf0 ?tv6)))) (snd2 (tf0 ?tv5))) (snd2 (tf0 ?tv6)))))
  (:: tf0 (-> (Tree) (Tuple2 Nat Bool)))
  (let tf0 (?tv1) (tf1 ?tv1))
  (:: spec (-> (Tree) Bool))
  (let spec (?tv0) (snd2 (tf0 ?tv0)))
  (:: tf3 (-> (Tree) Tree))
  (let tf3 ((Leaf ?tv10)) (Leaf ?tv10))
  (let tf3 ((Node (MakeTuple3 ?tv11 ?tv12 ?tv13))) (Node (MakeTuple3 ?tv11 (tf2 ?tv12) (tf2 ?tv13))))
  (:: tf2 (-> (Tree) Tree))
  (let tf2 (?tv8) (tf3 ?tv8))
  (:: repr (-> (Tree) Tree))
  (let repr (?tv7) (tf2 ?tv7))
  (:: main (-> (Tree) Bool))
  (let main (?tv14) (spec (repr ?tv14)))
  (:: tf5 (-> (Tree) (Tuple2 Bool Nat)))
  (let tf5 ((Leaf ?tv18)) (MakeTuple2 True ?tv18))
  (let tf5 ((Node (MakeTuple3 ?tv19 ?tv20 ?tv21))) (MakeTuple2 (and (and (and (lq (snd2 (tf4 ?tv20)) ?tv19) (fst2 (tf4 ?tv21))) (fst2 (tf4 ?tv20))) (lq ?tv19 (snd2 (tf4 ?tv21)))) ?tv19))
  (:: tf4 (-> (Tree) (Tuple2 Bool Nat)))
  (let tf4 (?tv16) (tf5 ?tv16))
  (:: reprNew (-> (Tree) (Tuple2 Bool Nat)))
  (let reprNew (?tv15) (tf4 ?tv15))
  (:: mainNew (-> (Tree) Bool))
  (let mainNew (?tv22) (fst2 (reprNew ?tv22)))
  (=== optimize (inp0) (Tree) (main inp0) (mainNew inp0))
)
