(
  (data Bool (True False))
  (:: True Bool)
  (:: False Bool)
  (data Unit (Null))
  (:: Null Unit)
  (data ArithOp (APlus AMinus AGt))
  (:: APlus (-> (Unit) ArithOp))
  (:: AMinus (-> (Unit) ArithOp))
  (:: AGt (-> (Unit) ArithOp))
  (data BoolOp (BNot BAnd BOr BEq))
  (:: BNot (-> (Unit) BoolOp))
  (:: BAnd (-> (Unit) BoolOp))
  (:: BOr (-> (Unit) BoolOp))
  (:: BEq (-> (Unit) BoolOp))
  (data Tuple3 (pvar0 pvar1 pvar2) (MakeTuple3))
  (:: MakeTuple3 (-> (pvar0 pvar1 pvar2) (Tuple3 pvar0 pvar1 pvar2)))
  (data Tuple2 (pvar0 pvar1) (MakeTuple2))
  (:: MakeTuple2 (-> (pvar0 pvar1) (Tuple2 pvar0 pvar1)))
  (data Nat (Zero Succ))
  (:: Zero Nat)
  (:: Succ (-> (Nat) Nat))
  (data Term (TArithBin TBoolBin TArithUn TBoolUn TVar TCInt TCBool))
  (:: TArithBin (-> ((Tuple3 ArithOp Term Term)) Term))
  (:: TBoolBin (-> ((Tuple3 BoolOp Term Term)) Term))
  (:: TArithUn (-> ((Tuple2 ArithOp Term)) Term))
  (:: TBoolUn (-> ((Tuple2 BoolOp Term)) Term))
  (:: TVar (-> (Nat) Term))
  (:: TCInt (-> (Nat) Term))
  (:: TCBool (-> (Bool) Term))
  (data Op (OpPlus OpMinus OpNot OpAnd OpOr OpGt OpEq))
  (:: OpPlus (-> (Unit) Op))
  (:: OpMinus (-> (Unit) Op))
  (:: OpNot (-> (Unit) Op))
  (:: OpAnd (-> (Unit) Op))
  (:: OpOr (-> (Unit) Op))
  (:: OpGt (-> (Unit) Op))
  (:: OpEq (-> (Unit) Op))
  (data Term2 (Bin Un Var CInt CBool))
  (:: Bin (-> ((Tuple3 Op Term2 Term2)) Term2))
  (:: Un (-> ((Tuple2 Op Term2)) Term2))
  (:: Var (-> (Nat) Term2))
  (:: CInt (-> (Nat) Term2))
  (:: CBool (-> (Bool) Term2))
  (:: tf0 (-> (Term Term Op) Term))
  (let tf0 (?tv3 ?tv4 (OpPlus ?tv5)) (TArithBin (MakeTuple3 (APlus Null) ?tv4 ?tv3)))
  (let tf0 (?tv3 ?tv4 (OpMinus ?tv6)) (TArithBin (MakeTuple3 (AMinus Null) ?tv4 ?tv3)))
  (let tf0 (?tv3 ?tv4 (OpNot ?tv7)) (TBoolBin (MakeTuple3 (BNot Null) ?tv4 ?tv3)))
  (let tf0 (?tv3 ?tv4 (OpAnd ?tv8)) (TBoolBin (MakeTuple3 (BAnd Null) ?tv4 ?tv3)))
  (let tf0 (?tv3 ?tv4 (OpOr ?tv9)) (TBoolBin (MakeTuple3 (BOr Null) ?tv4 ?tv3)))
  (let tf0 (?tv3 ?tv4 (OpGt ?tv10)) (TArithBin (MakeTuple3 (AGt Null) ?tv4 ?tv3)))
  (let tf0 (?tv3 ?tv4 (OpEq ?tv11)) (TBoolBin (MakeTuple3 (BEq Null) ?tv4 ?tv3)))
  (:: mkbin (-> (Term Term Op) Term))
  (let mkbin (?tv0 ?tv1 ?tv2) (tf0 ?tv1 ?tv0 ?tv2))
  (:: tf1 (-> (Term Op) Term))
  (let tf1 (?tv14 (OpPlus ?tv15)) (TArithUn (MakeTuple2 (APlus Null) ?tv14)))
  (let tf1 (?tv14 (OpMinus ?tv16)) (TArithUn (MakeTuple2 (AMinus Null) ?tv14)))
  (let tf1 (?tv14 (OpNot ?tv17)) (TBoolUn (MakeTuple2 (BNot Null) ?tv14)))
  (let tf1 (?tv14 (OpAnd ?tv18)) (TBoolUn (MakeTuple2 (BAnd Null) ?tv14)))
  (let tf1 (?tv14 (OpOr ?tv19)) (TBoolUn (MakeTuple2 (BOr Null) ?tv14)))
  (let tf1 (?tv14 (OpGt ?tv20)) (TArithUn (MakeTuple2 (AGt Null) ?tv14)))
  (let tf1 (?tv14 (OpEq ?tv21)) (TBoolUn (MakeTuple2 (BEq Null) ?tv14)))
  (:: mkun (-> (Term Op) Term))
  (let mkun (?tv12 ?tv13) (tf1 ?tv12 ?tv13))
  (:: tf3 (-> (Term2) Term))
  (let tf3 ((Bin (MakeTuple3 ?tv25 ?tv26 ?tv27))) (mkbin (tf2 ?tv26) (tf2 ?tv27) ?tv25))
  (let tf3 ((Un (MakeTuple2 ?tv28 ?tv29))) (mkun (tf2 ?tv29) ?tv28))
  (let tf3 ((Var ?tv30)) (TVar ?tv30))
  (let tf3 ((CInt ?tv31)) (TCInt ?tv31))
  (let tf3 ((CBool ?tv32)) (TCBool ?tv32))
  (:: tf2 (-> (Term2) Term))
  (let tf2 (?tv23) (tf3 ?tv23))
  (:: repr (-> (Term2) Term))
  (let repr (?tv22) (tf2 ?tv22))
  (:: lq (-> (Nat Nat) Bool))
  (let lq (Zero (Succ ?x)) True)
  (let lq (?x Zero) False)
  (let lq ((Succ ?x) (Succ ?y)) (lq ?x ?y))
  (:: ite (-> (Bool pvar0 pvar0) pvar0))
  (let ite (True ?x ?y) ?x)
  (let ite (False ?x ?y) ?y)
  (:: max (-> (Nat Nat) Nat))
  (let max (?tv33 ?tv34) (ite (lq ?tv33 ?tv34) ?tv34 ?tv33))
  (:: plus (-> (Nat Nat) Nat))
  (let plus (Zero ?x) ?x)
  (let plus ((Succ ?x) ?y) (Succ (plus ?x ?y)))
  (:: tf5 (-> (Term) Nat))
  (let tf5 ((TArithBin (MakeTuple3 ?tv38 ?tv39 ?tv40))) (plus (Succ Zero) (max (tf4 ?tv39) (tf4 ?tv40))))
  (let tf5 ((TBoolBin (MakeTuple3 ?tv41 ?tv42 ?tv43))) (plus (Succ Zero) (max (tf4 ?tv42) (tf4 ?tv43))))
  (let tf5 ((TArithUn (MakeTuple2 ?tv44 ?tv45))) (plus (Succ Zero) (tf4 ?tv45)))
  (let tf5 ((TBoolUn (MakeTuple2 ?tv46 ?tv47))) (plus (Succ Zero) (tf4 ?tv47)))
  (let tf5 ((TVar ?tv48)) (Succ Zero))
  (let tf5 ((TCInt ?tv49)) (Succ Zero))
  (let tf5 ((TCBool ?tv50)) (Succ Zero))
  (:: tf4 (-> (Term) Nat))
  (let tf4 (?tv36) (tf5 ?tv36))
  (:: spec (-> (Term) Nat))
  (let spec (?tv35) (tf4 ?tv35))
  (:: tf7 (-> (Term2) Term2))
  (let tf7 ((Bin (MakeTuple3 ?tv54 ?tv55 ?tv56))) (Bin (MakeTuple3 ?tv54 (tf6 ?tv55) (tf6 ?tv56))))
  (let tf7 ((Un (MakeTuple2 ?tv57 ?tv58))) (Un (MakeTuple2 ?tv57 (tf6 ?tv58))))
  (let tf7 ((Var ?tv59)) (Var ?tv59))
  (let tf7 ((CInt ?tv60)) (CInt ?tv60))
  (let tf7 ((CBool ?tv61)) (CBool ?tv61))
  (:: tf6 (-> (Term2) Term2))
  (let tf6 (?tv52) (tf7 ?tv52))
  (:: target (-> (Term2) Term2))
  (let target (?tv51) (tf6 ?tv51))
  (:: main (-> (Term2) Nat))
  (let main (?tv62) (spec (repr (target ?tv62))))
  (:: tf9 (-> (Term2) Nat))
  (let tf9 ((Bin (MakeTuple3 ?tv66 ?tv67 ?tv68))) (plus (Succ Zero) (max (tf8 ?tv67) (tf8 ?tv68))))
  (let tf9 ((Un (MakeTuple2 ?tv69 ?tv70))) (plus (Succ Zero) (tf8 ?tv70)))
  (let tf9 ((Var ?tv71)) (Succ Zero))
  (let tf9 ((CInt ?tv72)) (Succ Zero))
  (let tf9 ((CBool ?tv73)) (Succ Zero))
  (:: tf8 (-> (Term2) Nat))
  (let tf8 (?tv64) (tf9 ?tv64))
  (:: targetNew (-> (Term2) Nat))
  (let targetNew (?tv63) (tf8 ?tv63))
  (:: mainNew (-> (Term2) Nat))
  (let mainNew (?tv74) (targetNew ?tv74))
  (=== optimize (inp0) (Term2) (main inp0) (mainNew inp0))
)
