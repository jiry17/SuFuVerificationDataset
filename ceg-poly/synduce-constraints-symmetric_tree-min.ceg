(
  (data Bool (True False))
  (:: True Bool)
  (:: False Bool)
  (data Nat (Zero Succ))
  (:: Zero Nat)
  (:: Succ (-> (Nat) Nat))
  (data Tuple3 (pvar0 pvar1 pvar2) (MakeTuple3))
  (:: MakeTuple3 (-> (pvar0 pvar1 pvar2) (Tuple3 pvar0 pvar1 pvar2)))
  (data Tree (Leaf Node))
  (:: Leaf (-> (Nat) Tree))
  (:: Node (-> ((Tuple3 Nat Tree Tree)) Tree))
  (data Tuple2 (pvar0 pvar1) (MakeTuple2))
  (:: MakeTuple2 (-> (pvar0 pvar1) (Tuple2 pvar0 pvar1)))
  (:: nateq (-> (Nat Nat) Bool))
  (let nateq (Zero Zero) True)
  (let nateq (Zero (Succ ?x)) False)
  (let nateq ((Succ ?x) Zero) False)
  (let nateq ((Succ ?x) (Succ ?y)) (nateq ?x ?y))
  (:: and (-> (Bool Bool) Bool))
  (let and (False ?x) False)
  (let and (?x False) False)
  (let and (True True) True)
  (:: tf1 (-> ((Tuple2 Tree Tree)) Bool))
  (let tf1 ((MakeTuple2 (Leaf ?tv5) (Leaf ?tv6))) (nateq ?tv5 ?tv6))
  (let tf1 ((MakeTuple2 (Node (MakeTuple3 ?tv7 ?tv8 ?tv9)) (Node (MakeTuple3 ?tv10 ?tv11 ?tv12)))) (and (nateq ?tv7 ?tv10) (and (tf0 ?tv9 ?tv11) (tf0 ?tv8 ?tv9))))
  (let tf1 ((MakeTuple2 (Node ?tv13) (Leaf ?tv14))) False)
  (let tf1 ((MakeTuple2 (Leaf ?tv15) (Node ?tv16))) False)
  (:: tf0 (-> (Tree Tree) Bool))
  (let tf0 (?tv2 ?tv3) (tf1 (MakeTuple2 ?tv2 ?tv3)))
  (:: issympair (-> (Tree Tree) Bool))
  (let issympair (?tv0 ?tv1) (tf0 ?tv0 ?tv1))
  (:: tf3 (-> (Tree) Bool))
  (let tf3 ((Leaf ?tv20)) True)
  (let tf3 ((Node (MakeTuple3 ?tv21 ?tv22 ?tv23))) (and (issympair ?tv22 ?tv23) (and (tf2 ?tv22) (tf2 ?tv23))))
  (:: tf2 (-> (Tree) Bool))
  (let tf2 (?tv18) (tf3 ?tv18))
  (:: issym (-> (Tree) Bool))
  (let issym (?tv17) (tf2 ?tv17))
  (:: lq (-> (Nat Nat) Bool))
  (let lq (Zero (Succ ?x)) True)
  (let lq (?x Zero) False)
  (let lq ((Succ ?x) (Succ ?y)) (lq ?x ?y))
  (:: ite (-> (Bool pvar0 pvar0) pvar0))
  (let ite (True ?x ?y) ?x)
  (let ite (False ?x ?y) ?y)
  (:: min (-> (Nat Nat) Nat))
  (let min (?tv24 ?tv25) (ite (lq ?tv24 ?tv25) ?tv24 ?tv25))
  (:: tf5 (-> (Tree) Nat))
  (let tf5 ((Leaf ?tv29)) ?tv29)
  (let tf5 ((Node (MakeTuple3 ?tv30 ?tv31 ?tv32))) (min ?tv30 (min (tf4 ?tv31) (tf4 ?tv32))))
  (:: tf4 (-> (Tree) Nat))
  (let tf4 (?tv27) (tf5 ?tv27))
  (:: spec (-> (Tree) Nat))
  (let spec (?tv26) (tf4 ?tv26))
  (:: tf7 (-> (Tree) Tree))
  (let tf7 ((Leaf ?tv36)) (Leaf ?tv36))
  (let tf7 ((Node (MakeTuple3 ?tv37 ?tv38 ?tv39))) (Node (MakeTuple3 ?tv37 (tf6 ?tv38) ?tv39)))
  (:: tf6 (-> (Tree) Tree))
  (let tf6 (?tv34) (tf7 ?tv34))
  (:: target (-> (Tree) Tree))
  (let target (?tv33) (tf6 ?tv33))
  (:: main (-> (Tree) Nat))
  (let main (?tv40) (ite (issym ?tv40) (spec (target ?tv40)) Zero))
  (:: tf9 (-> (Tree) Nat))
  (let tf9 ((Leaf ?tv44)) ?tv44)
  (let tf9 ((Node (MakeTuple3 ?tv45 ?tv46 ?tv47))) (min ?tv45 (tf8 ?tv46)))
  (:: tf8 (-> (Tree) Nat))
  (let tf8 (?tv42) (tf9 ?tv42))
  (:: targetNew (-> (Tree) Nat))
  (let targetNew (?tv41) (tf8 ?tv41))
  (:: mainNew (-> (Tree) Nat))
  (let mainNew (?tv48) (ite (issym ?tv48) (targetNew ?tv48) Zero))
  (=== optimize (inp0) (Tree) (main inp0) (mainNew inp0))
)
