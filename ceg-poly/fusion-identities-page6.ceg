(
  (data Bool (True False))
  (:: True Bool)
  (:: False Bool)
  (data Unit (Null))
  (:: Null Unit)
  (data Tuple2 (pvar0 pvar1) (MakeTuple2))
  (:: MakeTuple2 (-> (pvar0 pvar1) (Tuple2 pvar0 pvar1)))
  (data Nat (Zero Succ))
  (:: Zero Nat)
  (:: Succ (-> (Nat) Nat))
  (data List (Nil Cons))
  (:: Nil (-> (Unit) List))
  (:: Cons (-> ((Tuple2 Nat List)) List))
  (data List2D (Nil2D Cons2D))
  (:: Nil2D (-> (Unit) List2D))
  (:: Cons2D (-> ((Tuple2 List List2D)) List2D))
  (data List3D (Nil3D Cons3D))
  (:: Nil3D (-> (Unit) List3D))
  (:: Cons3D (-> ((Tuple2 List2D List3D)) List3D))
  (:: tf1 (-> (List List) List2D))
  (let tf1 (?tv3 (Nil ?tv4)) (Cons2D (MakeTuple2 ?tv3 (Nil2D Null))))
  (let tf1 (?tv3 (Cons (MakeTuple2 ?tv5 ?tv6))) (Cons2D (MakeTuple2 ?tv3 (tf0 ?tv6))))
  (:: tf0 (-> (List) List2D))
  (let tf0 (?tv1) (tf1 ?tv1 ?tv1))
  (:: tails (-> (List) List2D))
  (let tails (?tv0) (tf0 ?tv0))
  (:: tf3 (-> ((-> (List) List) Nat List) List))
  (let tf3 (?tv11 ?tv12 (Nil ?tv13)) (Cons (MakeTuple2 ?tv12 (Nil Null))))
  (let tf3 (?tv11 ?tv12 (Cons (MakeTuple2 ?tv14 ?tv15))) (Cons (MakeTuple2 ?tv14 ($ ?tv11 ?tv15))))
  (:: tf2 (-> (Nat List) List))
  (let tf2 (?tv9 ?tv10) (tf3 (tf2 ?tv9) ?tv9 ?tv10))
  (:: append (-> (Nat List) List))
  (let append (?tv7 ?tv8) (tf2 ?tv7 ?tv8))
  (:: tf5 (-> (List List) List2D))
  (let tf5 (?tv24 (Nil ?tv25)) (Cons2D (MakeTuple2 ?tv24 (Nil2D Null))))
  (let tf5 (?tv24 (Cons (MakeTuple2 ?tv26 ?tv27))) (Cons2D (MakeTuple2 ?tv24 (tf4 (append ?tv26 ?tv24) ?tv27))))
  (:: tf4 (-> (List List) List2D))
  (let tf4 (?tv20 ?tv21) (tf5 ?tv20 ?tv21))
  (:: scanl (-> (List) List2D))
  (let scanl (?tv18) (tf4 (Nil Null) ?tv18))
  (:: inits (-> (List) List2D))
  (let inits (?tv28) (scanl ?tv28))
  (:: tf7 (-> (List2D) List3D))
  (let tf7 ((Nil2D ?tv35)) (Nil3D Null))
  (let tf7 ((Cons2D (MakeTuple2 ?tv36 ?tv37))) (Cons3D (MakeTuple2 (inits ?tv36) (tf6 ?tv37))))
  (:: tf6 (-> (List2D) List3D))
  (let tf6 (?tv32) (tf7 ?tv32))
  (:: map (-> (List2D) List3D))
  (let map (?tv30) (tf6 ?tv30))
  (:: tf11 (-> ((-> (List2D) List2D) List3D List2D) List2D))
  (let tf11 (?tv47 ?tv48 (Nil2D ?tv50)) (tf8 ?tv48))
  (let tf11 (?tv47 ?tv48 (Cons2D (MakeTuple2 ?tv51 ?tv52))) (Cons2D (MakeTuple2 ?tv51 ($ ?tv47 ?tv52))))
  (:: tf10 (-> (List3D List2D) List2D))
  (let tf10 (?tv44 ?tv46) (tf11 (tf10 ?tv44) ?tv44 ?tv46))
  (:: tf9 (-> (List3D) List2D))
  (let tf9 ((Nil3D ?tv41)) (Nil2D Null))
  (let tf9 ((Cons3D (MakeTuple2 ?tv42 ?tv43))) (tf10 ?tv43 ?tv42))
  (:: tf8 (-> (List3D) List2D))
  (let tf8 (?tv39) (tf9 ?tv39))
  (:: concat (-> (List3D) List2D))
  (let concat (?tv38) (tf8 ?tv38))
  (:: segs (-> (List) List2D))
  (let segs (?tv53) (concat (map (tails ?tv53))))
  (:: tf13 (-> (List2D) List))
  (let tf13 ((Nil2D ?tv60)) (Nil Null))
  (let tf13 ((Cons2D (MakeTuple2 ?tv61 ?tv62))) (Cons (MakeTuple2 (sum ?tv61) (tf12 ?tv62))))
  (:: tf12 (-> (List2D) List))
  (let tf12 (?tv57) (tf13 ?tv57))
  (:: mapL (-> (List2D) List))
  (let mapL (?tv55) (tf12 ?tv55))
  (:: plus (-> (Nat Nat) Nat))
  (let plus (Zero ?x) ?x)
  (let plus ((Succ ?x) ?y) (Succ (plus ?x ?y)))
  (:: tf15 (-> (List) Nat))
  (let tf15 ((Nil ?tv66)) Zero)
  (let tf15 ((Cons (MakeTuple2 ?tv67 ?tv68))) (plus ?tv67 (tf14 ?tv68)))
  (:: tf14 (-> (List) Nat))
  (let tf14 (?tv64) (tf15 ?tv64))
  (:: sum (-> (List) Nat))
  (let sum (?tv63) (tf14 ?tv63))
  (:: lq (-> (Nat Nat) Bool))
  (let lq (Zero (Succ ?x)) True)
  (let lq (?x Zero) False)
  (let lq ((Succ ?x) (Succ ?y)) (lq ?x ?y))
  (:: ite (-> (Bool pvar0 pvar0) pvar0))
  (let ite (True ?x ?y) ?x)
  (let ite (False ?x ?y) ?y)
  (:: max (-> (Nat Nat) Nat))
  (let max (?tv69 ?tv70) (ite (lq ?tv69 ?tv70) ?tv70 ?tv69))
  (:: tf17 (-> (List) Nat))
  (let tf17 ((Nil ?tv74)) Zero)
  (let tf17 ((Cons (MakeTuple2 ?tv75 ?tv76))) (max ?tv75 (tf16 ?tv76)))
  (:: tf16 (-> (List) Nat))
  (let tf16 (?tv72) (tf17 ?tv72))
  (:: maximum (-> (List) Nat))
  (let maximum (?tv71) (tf16 ?tv71))
  (:: maxsum (-> (List2D) Nat))
  (let maxsum (?tv77) (maximum (mapL ?tv77)))
  (:: mss (-> (List) Nat))
  (let mss (?tv78) (maxsum (segs ?tv78)))
  (:: snd2 (-> ((Tuple2 pvar0 pvar1)) pvar2))
  (let snd2 ((MakeTuple2 ?x0 ?x1)) ?x1)
  (:: fst2 (-> ((Tuple2 pvar0 pvar1)) pvar1))
  (let fst2 ((MakeTuple2 ?x0 ?x1)) ?x0)
  (:: tf19 (-> (List) (Tuple2 Nat Nat)))
  (let tf19 ((Nil ?tv82)) (MakeTuple2 Zero Zero))
  (let tf19 ((Cons (MakeTuple2 ?tv83 ?tv84))) (MakeTuple2 (ite (lq (plus ?tv83 (snd2 (tf18 ?tv84))) (fst2 (tf18 ?tv84))) (fst2 (tf18 ?tv84)) (plus ?tv83 (snd2 (tf18 ?tv84)))) (ite (lq Zero (plus ?tv83 (snd2 (tf18 ?tv84)))) (plus ?tv83 (snd2 (tf18 ?tv84))) Zero)))
  (:: tf18 (-> (List) (Tuple2 Nat Nat)))
  (let tf18 (?tv80) (tf19 ?tv80))
  (:: tailsNew (-> (List) (Tuple2 Nat Nat)))
  (let tailsNew (?tv79) (tf18 ?tv79))
  (:: segsNew (-> (List) Nat))
  (let segsNew (?tv85) (fst2 (tailsNew ?tv85)))
  (:: mssNew (-> (List) Nat))
  (let mssNew (?tv86) (segsNew ?tv86))
  (=== optimize (inp0) (List) (mss inp0) (mssNew inp0))
)
