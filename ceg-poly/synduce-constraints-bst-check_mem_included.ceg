(
  (data Bool (True False))
  (:: True Bool)
  (:: False Bool)
  (data Tuple2 (pvar0 pvar1) (MakeTuple2))
  (:: MakeTuple2 (-> (pvar0 pvar1) (Tuple2 pvar0 pvar1)))
  (data Nat (Zero Succ))
  (:: Zero Nat)
  (:: Succ (-> (Nat) Nat))
  (data Tuple4 (pvar0 pvar1 pvar2 pvar3) (MakeTuple4))
  (:: MakeTuple4 (-> (pvar0 pvar1 pvar2 pvar3) (Tuple4 pvar0 pvar1 pvar2 pvar3)))
  (data Tree (Leaf Node))
  (:: Leaf (-> ((Tuple2 Nat Nat)) Tree))
  (:: Node (-> ((Tuple4 Nat Nat Tree Tree)) Tree))
  (:: lq (-> (Nat Nat) Bool))
  (let lq (Zero (Succ ?x)) True)
  (let lq (?x Zero) False)
  (let lq ((Succ ?x) (Succ ?y)) (lq ?x ?y))
  (:: ite (-> (Bool pvar0 pvar0) pvar0))
  (let ite (True ?x ?y) ?x)
  (let ite (False ?x ?y) ?y)
  (:: min (-> (Nat Nat) Nat))
  (let min (?tv0 ?tv1) (ite (lq ?tv0 ?tv1) ?tv0 ?tv1))
  (:: max (-> (Nat Nat) Nat))
  (let max (?tv2 ?tv3) (ite (lq ?tv2 ?tv3) ?tv3 ?tv2))
  (:: tf1 (-> (Tree) Nat))
  (let tf1 ((Leaf (MakeTuple2 ?tv7 ?tv8))) ?tv7)
  (let tf1 ((Node (MakeTuple4 ?tv9 ?tv10 ?tv11 ?tv12))) (min ?tv9 (min (tf0 ?tv11) (tf0 ?tv12))))
  (:: tf0 (-> (Tree) Nat))
  (let tf0 (?tv5) (tf1 ?tv5))
  (:: tmin (-> (Tree) Nat))
  (let tmin (?tv4) (tf0 ?tv4))
  (:: tf3 (-> (Tree) Nat))
  (let tf3 ((Leaf (MakeTuple2 ?tv16 ?tv17))) ?tv16)
  (let tf3 ((Node (MakeTuple4 ?tv18 ?tv19 ?tv20 ?tv21))) (max ?tv18 (max (tf2 ?tv20) (tf2 ?tv21))))
  (:: tf2 (-> (Tree) Nat))
  (let tf2 (?tv14) (tf3 ?tv14))
  (:: tmax (-> (Tree) Nat))
  (let tmax (?tv13) (tf2 ?tv13))
  (:: and (-> (Bool Bool) Bool))
  (let and (False ?x) False)
  (let and (?x False) False)
  (let and (True True) True)
  (:: gq (-> (Nat Nat) Bool))
  (let gq (Zero ?x) False)
  (let gq ((Succ ?x) Zero) True)
  (let gq ((Succ ?x) (Succ ?y)) (gq ?x ?y))
  (:: tf5 (-> (Tree) Bool))
  (let tf5 ((Leaf (MakeTuple2 ?tv25 ?tv26))) (lq ?tv25 ?tv26))
  (let tf5 ((Node (MakeTuple4 ?tv27 ?tv28 ?tv29 ?tv30))) (and (lq ?tv27 ?tv28) (and (and (gq ?tv27 (tmax ?tv29)) (lq ?tv27 (tmin ?tv30))) (and (tf4 ?tv29) (tf4 ?tv30)))))
  (:: tf4 (-> (Tree) Bool))
  (let tf4 (?tv23) (tf5 ?tv23))
  (:: isbst (-> (Tree) Bool))
  (let isbst (?tv22) (tf4 ?tv22))
  (:: inside (-> (Nat Nat Nat Nat) Bool))
  (let inside (?tv31 ?tv32 ?tv33 ?tv34) (and (lq ?tv31 ?tv33) (lq ?tv34 ?tv32)))
  (:: or (-> (Bool Bool) Bool))
  (let or (True ?x) True)
  (let or (?x True) True)
  (let or (False False) False)
  (:: tf7 (-> ((-> (Tree) Bool) Nat Nat Tree) Bool))
  (let tf7 (?tv41 ?tv42 ?tv43 (Leaf (MakeTuple2 ?tv44 ?tv45))) (inside ?tv43 ?tv42 ?tv44 ?tv45))
  (let tf7 (?tv41 ?tv42 ?tv43 (Node (MakeTuple4 ?tv46 ?tv47 ?tv48 ?tv49))) (or (or (inside ?tv43 ?tv42 ?tv46 ?tv47) ($ ?tv41 ?tv48)) ($ ?tv41 ?tv49)))
  (:: tf6 (-> (Nat Nat Tree) Bool))
  (let tf6 (?tv38 ?tv39 ?tv40) (tf7 (tf6 ?tv38 ?tv39) ?tv38 ?tv39 ?tv40))
  (:: spec (-> (Nat Nat Tree) Bool))
  (let spec (?tv35 ?tv36 ?tv37) (tf6 ?tv36 ?tv35 ?tv37))
  (:: tf9 (-> (Nat (-> (Tree) Tree) Nat Tree) Tree))
  (let tf9 (?tv56 ?tv57 ?tv58 (Leaf (MakeTuple2 ?tv59 ?tv60))) (Leaf (MakeTuple2 ?tv59 ?tv60)))
  (let tf9 (?tv56 ?tv57 ?tv58 (Node (MakeTuple4 ?tv61 ?tv62 ?tv63 ?tv64))) (ite (gq ?tv62 ?tv58) (ite (gq ?tv61 ?tv56) (Node (MakeTuple4 ?tv61 ?tv62 ($ ?tv57 ?tv63) ($ ?tv57 ?tv64))) (Node (MakeTuple4 ?tv61 ?tv62 ?tv63 ($ ?tv57 ?tv64)))) (Node (MakeTuple4 ?tv61 ?tv62 ($ ?tv57 ?tv63) ($ ?tv57 ?tv64)))))
  (:: tf8 (-> (Nat Nat Tree) Tree))
  (let tf8 (?tv53 ?tv54 ?tv55) (tf9 ?tv53 (tf8 ?tv53 ?tv54) ?tv54 ?tv55))
  (:: target (-> (Nat Nat Tree) Tree))
  (let target (?tv50 ?tv51 ?tv52) (tf8 ?tv50 ?tv51 ?tv52))
  (:: main (-> (Nat Nat Tree) Bool))
  (let main (?tv65 ?tv66 ?tv67) (ite (isbst ?tv67) (spec ?tv65 ?tv66 (target ?tv65 ?tv66 ?tv67)) False))
  (:: tf11 (-> ((-> (Tree) Bool) Nat Nat Tree) Bool))
  (let tf11 (?tv74 ?tv75 ?tv76 (Leaf (MakeTuple2 ?tv77 ?tv78))) (inside ?tv76 ?tv75 ?tv77 ?tv78))
  (let tf11 (?tv74 ?tv75 ?tv76 (Node (MakeTuple4 ?tv79 ?tv80 ?tv81 ?tv82))) (ite (gq ?tv80 ?tv75) (ite (gq ?tv79 ?tv76) (or ($ ?tv74 ?tv81) ($ ?tv74 ?tv82)) ($ ?tv74 ?tv82)) (or (or ($ ?tv74 ?tv81) ($ ?tv74 ?tv82)) (inside ?tv76 ?tv75 ?tv79 ?tv80))))
  (:: tf10 (-> (Nat Nat Tree) Bool))
  (let tf10 (?tv71 ?tv72 ?tv73) (tf11 (tf10 ?tv71 ?tv72) ?tv71 ?tv72 ?tv73))
  (:: targetNew (-> (Nat Nat Tree) Bool))
  (let targetNew (?tv68 ?tv69 ?tv70) (tf10 ?tv69 ?tv68 ?tv70))
  (:: mainNew (-> (Nat Nat Tree) Bool))
  (let mainNew (?tv83 ?tv84 ?tv85) (ite (isbst ?tv85) (targetNew ?tv83 ?tv84 ?tv85) False))
  (=== optimize (inp0 inp1 inp2) (Nat Nat Tree) (main inp0 inp1 inp2) (mainNew inp0 inp1 inp2))
)
