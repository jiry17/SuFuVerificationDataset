Proving begin optimize: (main v0) === (mainNew v0)
Property accepted by cvec analysis
new lemma forall v0: List. v0 === (tf7 v0 v0)
new lemma forall v0: Bool. v0 === (and True v0)
new lemma forall v0: List. Zero === (ite1 (tf1 Zero v0) Zero Zero)
new lemma forall v0: Nat. Zero === (ite1 (geq Zero v0) Zero Zero)
new lemma forall v0: Nat. v0 === (ite1 (lq Zero v0) v0 Zero)
new lemma forall v0: Nat. Zero === (ite1 (geq Zero v0) (ite1 (lq Zero v0) v0 Zero) Zero)
new lemma forall v0: Nat. v1: List. Zero === (ite1 (and (geq Zero v0) (tf1 v0 v1)) Zero Zero)
new lemma forall v0: List. Zero === (ite1 (tf1 Zero v0) (tf5 v0) Zero)
new lemma forall v0: Nat. v1: List. False === (lq Zero (ite1 (and (geq Zero v0) (tf1 v0 v1)) Zero Zero))
new lemma forall v0: List. (ite1 (tf1 Zero v0) Zero Zero) === (ite1 (tf1 Zero v0) (tf5 v0) Zero)
new lemma forall v0: List. (ite1 (tf1 Zero v0) (tf5 v0) Zero) === (ite1 (tf1 Zero (tf7 v0 v0)) Zero Zero)
new lemma forall v0: List. (ite1 (tf1 Zero v0) Zero Zero) === (ite1 (tf1 Zero (tf7 v0 v0)) (tf5 v0) Zero)
new lemma forall v0: Nat. v1: List. (ite1 (and (geq Zero v0) (tf1 v0 v1)) Zero Zero) === (ite1 (tf1 Zero v1) Zero Zero)
new lemma forall v0: Nat. v1: List. Zero === (ite1 (and (geq Zero (ite1 (lq Zero v0) v0 Zero)) (tf1 v0 v1)) Zero Zero)
new lemma forall v0: List. v1: Nat. Zero === (ite1 (and (geq (ite1 (tf1 Zero v0) Zero Zero) v1) (tf1 v1 v0)) Zero Zero)
new lemma forall v0: Bool. Zero === (ite1 v0 Zero Zero)
new lemma forall v0: Nat. (ite1 (geq Zero v0) Zero Zero) === (ite1 (geq Zero v0) (ite1 (lq Zero v0) v0 Zero) Zero)
new lemma forall v0: List. (ite1 (tf1 Zero (tf7 v0 v0)) Zero Zero) === (ite1 (tf1 Zero (tf7 v0 v0)) (tf5 v0) Zero)
new lemma forall v0: Nat. v1: List. (ite1 (and (geq Zero v0) (tf1 v0 v1)) Zero Zero) === (ite1 (tf1 Zero v1) (tf5 v1) Zero)
new lemma forall v0: List. v1: Nat. False === (lq (ite1 (tf1 Zero v0) Zero Zero) (ite1 (and (geq Zero v1) (tf1 v1 v0)) Zero Zero))
new lemma forall v0: Nat. v1: List. (ite1 (and (geq Zero v0) (tf1 v0 v1)) Zero Zero) === (ite1 (tf1 Zero (tf7 v1 v1)) Zero Zero)
new lemma forall v0: Nat. v1: List. False === (lq Zero (ite1 (and (geq Zero (ite1 (lq Zero v0) v0 Zero)) (tf1 v0 v1)) Zero Zero))
new lemma forall v0: List. v1: Nat. Zero === (ite1 (and (geq (ite1 (tf1 Zero (tf7 v0 v0)) Zero Zero) v1) (tf1 v1 v0)) Zero Zero)
new lemma forall v0: Nat. (Succ v0) === (ite1 (lq Zero v0) (Succ v0) (Succ Zero))
new lemma forall v0: Bool. v1: Nat. v0 === (and v0 (lq Zero (ite1 (lq Zero v1) (Succ (Succ v1)) (Succ (Succ Zero)))))
new lemma forall v0: Bool. v1: Nat. v0 === (lq Zero (ite1 v0 (Succ v1) Zero))
new lemma forall v0: Nat. v1: List. (ite1 (and (geq Zero v0) (tf1 v0 v1)) Zero Zero) === (ite1 (tf1 Zero (tf7 v1 v1)) (tf5 v1) Zero)
new lemma forall v0: Bool. v1: Nat. v0 === (and v0 (lq Zero (ite1 (lq Zero v1) (Succ (Succ (Succ v1))) (Succ (Succ (Succ Zero))))))
new lemma forall v0: List. v1: Nat. False === (lq (ite1 (tf1 Zero (tf7 v0 v0)) Zero Zero) (ite1 (and (geq Zero v1) (tf1 v1 v0)) Zero Zero))
new lemma forall v0: Bool. v1: Nat. v2: Nat. True === (lq Zero (ite1 v0 (Succ v1) (Succ v2)))
prove lemma forall v0: Bool. v1: Nat. v2: Nat. v0 === (lq Zero (ite1 v0 (ite1 (lq v1 v2) (Succ v2) (Succ v1)) Zero))
prove lemma forall v0: Bool. v1: Nat. v2: Nat. v0 === (and v0 (lq Zero (ite1 (lq v1 v2) (Succ v2) (Succ v1))))
prove lemma forall v0: Bool. v1: Nat. v2: Nat. v0 === (lq Zero (ite1 v0 (ite1 (lq v1 (ite1 (lq Zero v2) v2 Zero)) (Succ v2) (Succ v1)) Zero))
prove lemma forall v0: Bool. v1: Nat. v2: Nat. v0 === (lq Zero (ite1 v0 (ite1 (lq (ite1 (lq Zero v1) v1 Zero) v2) (Succ v2) (Succ v1)) Zero))
prove lemma forall v0: Bool. v1: Nat. v2: Nat. v0 === (and v0 (lq Zero (ite1 (lq v1 (ite1 (lq Zero v2) v2 Zero)) (Succ v2) (Succ v1))))
prove lemma forall v0: Bool. v1: Nat. v2: Nat. v0 === (and v0 (lq Zero (ite1 (lq (ite1 (lq Zero v1) v1 Zero) v2) (Succ v2) (Succ v1))))
prove lemma forall v0: Bool. v1: Nat. v2: Nat. v0 === (and v0 (lq Zero (ite1 (lq (Succ v1) v2) (Succ v2) (Succ (Succ v1)))))
prove lemma forall v0: Bool. v1: Nat. v2: Nat. (and True v0) === (lq Zero (ite1 (and True v0) (ite1 (lq v1 v2) (Succ v2) (Succ v1)) Zero))
prove lemma forall v0: Bool. v1: Nat. v2: Nat. v0 === (lq Zero (ite1 (and True v0) (ite1 (lq v1 v2) (Succ v2) (Succ v1)) Zero))
prove lemma forall v0: Bool. v1: Nat. v2: Nat. (and True v0) === (lq Zero (ite1 v0 (ite1 (lq v1 v2) (Succ v2) (Succ v1)) Zero))
prove lemma forall v0: Bool. v1: Bool. v2: Nat. v3: Nat. (and v0 v1) === (and v0 (lq Zero (ite1 v1 (ite1 (lq v2 v3) (Succ v3) (Succ v2)) Zero)))
prove lemma forall v0: Nat. v1: Nat. v2: Nat. (geq Zero v0) === (lq Zero (ite1 (geq Zero v0) (ite1 (lq v1 v2) (Succ v2) (Succ v1)) Zero))
prove lemma forall v0: Bool. v1: Nat. v2: Nat. (and True v0) === (and (and True v0) (lq Zero (ite1 (lq v1 v2) (Succ v2) (Succ v1))))
prove lemma forall v0: Bool. v1: Nat. v2: Nat. v0 === (and (and True v0) (lq Zero (ite1 (lq v1 v2) (Succ v2) (Succ v1))))
prove lemma forall v0: Bool. v1: Nat. v2: Nat. (and v0 (lq Zero (ite1 (lq v1 v2) (Succ v2) (Succ v1)))) === (and True v0)
prove lemma forall v0: Bool. v1: Bool. v2: Nat. v3: Nat. (and v0 v1) === (and v0 (and v1 (lq Zero (ite1 (lq v2 v3) (Succ v3) (Succ v2)))))
prove lemma forall v0: Bool. v1: Nat. v2: Nat. v0 === (and v0 (lq Zero (ite1 (lq v1 v2) (Succ (Succ v2)) (Succ (Succ v1)))))
prove lemma forall v0: Bool. v1: Bool. v2: Nat. v3: Nat. (and v0 (and v1 (lq Zero (ite1 (lq v2 v3) (Succ v3) (Succ v2))))) === (and v0 (and True v1))
prove lemma forall v0: Bool. v1: Bool. v2: Nat. v3: Nat. (and v0 (and v1 (lq Zero (ite1 (lq v2 v3) (Succ v3) (Succ v2))))) === (and (and True v0) v1)
prove lemma forall v0: Bool. v1: Bool. v2: Nat. v3: Nat. (and v0 v1) === (and v0 (and (and True v1) (lq Zero (ite1 (lq v2 v3) (Succ v3) (Succ v2)))))
prove lemma forall v0: Bool. v1: Bool. v2: Nat. v3: Nat. (and v0 v1) === (and (and True v0) (and v1 (lq Zero (ite1 (lq v2 v3) (Succ v3) (Succ v2)))))
prove lemma forall v0: Bool. v1: Nat. v2: Nat. v0 === (and v0 (lq Zero (ite1 (lq (Succ v1) v2) (Succ (Succ v2)) (Succ (Succ (Succ v1))))))
prove lemma forall v0: Bool. v1: Nat. v2: Nat. v0 === (and v0 (lq Zero (ite1 (lq (Succ (Succ v1)) v2) (Succ v2) (Succ (Succ (Succ v1))))))
prove lemma forall v0: Bool. v1: Nat. v2: Nat. v0 === (and v0 (lq Zero (ite1 (lq v1 v2) (Succ (Succ (Succ v2))) (Succ (Succ (Succ v1))))))
new lemma forall v0: List. v1: Nat. v2: List. (ite1 (and (geq (ite1 (tf1 Zero v0) Zero Zero) v1) (tf1 v1 v2)) Zero Zero) === (ite1 (tf1 Zero v0) Zero Zero)
new lemma forall v0: List. v1: Nat. Zero === (ite1 (and (geq (ite1 (tf1 Zero v0) Zero Zero) (ite1 (lq Zero v1) v1 Zero)) (tf1 v1 v0)) Zero Zero)
new lemma forall v0: List. v1: Nat. (ite1 (and (geq (ite1 (tf1 Zero v0) Zero Zero) v1) (tf1 v1 v0)) Zero Zero) === (ite1 (tf1 Zero v0) Zero Zero)
new lemma forall v0: Nat. v1: List. (ite1 (and (geq Zero (ite1 (lq Zero v0) v0 Zero)) (tf1 v0 v1)) Zero Zero) === (ite1 (tf1 Zero v1) Zero Zero)
new lemma forall v0: Bool. v1: Nat. v2: List. (ite1 v0 Zero Zero) === (ite1 (and (geq (ite1 v0 Zero Zero) (ite1 (lq Zero v1) v1 Zero)) (tf1 v1 v2)) Zero Zero)
new lemma forall v0: Nat. v1: Nat. True === (lq Zero (ite1 (lq (ite1 (lq Zero v0) v0 Zero) (ite1 (lq Zero v1) v1 Zero)) (Succ v1) (Succ v0)))
new lemma forall v0: Nat. v1: List. (ite1 (and (geq Zero (ite1 (lq Zero v0) v0 Zero)) (tf1 v0 v1)) Zero Zero) === (ite1 (tf1 Zero v1) (tf5 v1) Zero)
new lemma forall v0: List. v1: Nat. (ite1 (and (geq (ite1 (tf1 Zero v0) Zero Zero) v1) (tf1 v1 v0)) Zero Zero) === (ite1 (tf1 Zero v0) (tf5 v0) Zero)
new lemma forall v0: Nat. v1: Nat. (ite1 (geq Zero v0) v1 Zero) === (ite1 (geq Zero v0) (ite1 (lq v1 v0) v0 v1) Zero)
new lemma forall v0: Nat. v1: Nat. (lq v0 v1) === (lq (ite1 (lq Zero v1) v0 Zero) v1)
new lemma forall v0: Nat. v1: Nat. False === (lq (ite1 (lq Zero v0) (Succ v0) v1) v0)
new lemma forall v0: Nat. v1: Nat. False === (lq (ite1 (lq Zero v0) (Succ v0) (ite1 (lq Zero v1) v1 Zero)) v0)
